export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      therapy_preferences: {
        Row: {
          created_at: string
          id: string
          therapy_type: string | null
          user_id: string | null
        }
        Insert: {
          created_at?: string
          id?: string
          therapy_type?: string | null
          user_id?: string | null
        }
        Update: {
          created_at?: string
          id?: string
          therapy_type?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "therapy_preferences_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "user_profiles"
            referencedColumns: ["user_id"]
          }
        ]
      }
      user_profiles: {
        Row: {
          created_at: string
          email: string | null
          full_name: string | null
          id: string
          updated_at: string | null
          user_id: string
          username: string | null
        }
        Insert: {
          created_at?: string
          email?: string | null
          full_name?: string | null
          id?: string
          updated_at?: string | null
          user_id: string
          username?: string | null
        }
        Update: {
          created_at?: string
          email?: string | null
          full_name?: string | null
          id?: string
          updated_at?: string | null
          user_id?: string
          username?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "user_profiles_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      vector_store: {
        Row: {
          content: string | null
          embedding: unknown | null
          id: string
          metadata: Json | null
        }
        Insert: {
          content?: string | null
          embedding?: unknown | null
          id: string
          metadata?: Json | null
        }
        Update: {
          content?: string | null
          embedding?: unknown | null
          id?: string
          metadata?: Json | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      generate_embedding: {
        Args: {
          input_text: string
        }
        Returns: unknown
      }
      match_documents: {
        Args: {
          query_embedding: unknown
          match_threshold: number
          match_count: number
        }
        Returns: {
          id: string
          content: string
          metadata: Json
          similarity: number
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
